{"version":3,"sources":["../../src/controller/account.js"],"names":["config","db","api","get","req","res","status","send","user","post","register","username","body","email","password","err","account","authenticate","session","scope","logout","json"],"mappings":";;;;;;AAAA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;kBAEc,gBAAkB;AAAA,MAAhBA,MAAgB,QAAhBA,MAAgB;AAAA,MAARC,EAAQ,QAARA,EAAQ;;AAC9B,MAAIC,MAAM,sBAAV;;AAGA;AACAA,MAAIC,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACzBA,QAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,MAAMJ,IAAII,IAAZ,EAArB;AACD,GAFD;;AAIA;AACFN,MAAIO,IAAJ,CAAS,WAAT,gCAAoC,UAACL,GAAD,EAAMC,GAAN,EAAc;AAChD,sBAAQK,QAAR,CAAiB,sBAAY;AAC3BC,gBAAUP,IAAIQ,IAAJ,CAASC;AADQ,KAAZ,CAAjB,EAEIT,IAAIQ,IAAJ,CAASE,QAFb,EAEuB,UAACC,GAAD,EAAMC,OAAN,EAAkB;AACvC,UAAGD,GAAH,EAAQ;AACN,eAAOV,IAAIE,IAAJ,CAASQ,GAAT,CAAP,CADM,CACgB;AACvB;AACD,yBAASE,YAAT,CACE,OADF,EACW;AACPC,iBAAS;AADF,OADX,EAGKd,GAHL,EAGUC,GAHV,EAGe,YAAM;AACjBA,YAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,kCAArB;AACD,OALH;AAMD,KAZD;AAaD,GAdD;;AAgBE;AACAL,MAAIO,IAAJ,CAAS,QAAT,EAAmB,mBAASQ,YAAT,CACjB,OADiB,EACT;AACNC,aAAS,KADH;AAENC,WAAO;AAFD,GADS,CAAnB;;AAQA;AACAjB,MAAIC,GAAJ,CAAQ,SAAR,gCAAiC,UAACC,GAAD,EAAKC,GAAL,EAAW;AAC1CA,QAAIe,MAAJ;AACAf,QAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,wBAArB;AACD,GAHD;;AAMAL,MAAIC,GAAJ,CAAQ,KAAR,gCAA6B,UAACC,GAAD,EAAMC,GAAN,EAAa;AACxCA,QAAIC,MAAJ,CAAW,GAAX,EAAgBe,IAAhB,CAAqBjB,IAAII,IAAzB;AACD,GAFD;;AAIA,SAAON,GAAP;AACD,C","file":"account.js","sourcesContent":["import mongoose from 'mongoose';\nimport {Router} from 'express';\nimport Account from '../model/account';\nimport bodyParser from 'body-parser';\nimport passport from 'passport';\nimport config from '../config';\n\nimport {generateAccessToken, respond, authenticate} from '../middleware/authMiddleware';\n\nexport default({config, db}) => {\n  let api = Router();\n\n\n  // '/v1/account'\n  api.get('/', (req, res) => {\n    res.status(200).send({ user: req.user });\n  });\n\n  // 'v1/account/register'\napi.post('/register', authenticate, (req, res) => {\n  Account.register(new Account({\n    username: req.body.email\n  }), req.body.password, (err, account) => {\n    if(err) {\n      return res.send(err); // add return\n    }\n    passport.authenticate(\n      'local', {\n        session: false\n      })(req, res, () => {\n        res.status(200).send('Successfully created new account');\n      });\n  });\n});\n\n  // '/v1/login'\n  api.post('/login', passport.authenticate(\n    'local',{\n      session: false,\n      scope: []\n    }), generateAccessToken, respond);\n\n\n\n  // '/v1/logout'\n  api.get('/logout', authenticate, (req,res)=>{\n    res.logout();\n    res.status(200).send('Succesfully logged out');\n  });\n\n\n  api.get('/me', authenticate, (req, res )=>{\n    res.status(200).json(req.user);\n  });\n\n  return api;\n}\n"]}